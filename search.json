[
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Mind the Gap: Gender, Wages, and the Workforce Divide",
    "section": "",
    "text": "Over the past two decades, gender equality in the global labor market has improved significantly. However, disparities in hiring, pay, and career advancement remain pervasive. According to (Organization (2023)), women earned, on average, 20% less than men globally in 2023. Moreover, women continue to be underrepresented in leadership positions and high-paying industries, highlighting persistent challenges in achieving workplace equity.\nIn the United States, gender equality is further influenced by state-level political ideologies. Labor policies such as minimum wage regulations, paid parental leave, and workplace protections vary significantly between conservative (red) and liberal (blue) states, leading to differences in wage equality and female workforce participation (Blau and Kahn (2017)). Examining these policy variations is crucial to understanding the systemic factors shaping gender-based employment disparities."
  },
  {
    "objectID": "introduction.html#introduction",
    "href": "introduction.html#introduction",
    "title": "Mind the Gap: Gender, Wages, and the Workforce Divide",
    "section": "",
    "text": "Over the past two decades, gender equality in the global labor market has improved significantly. However, disparities in hiring, pay, and career advancement remain pervasive. According to (Organization (2023)), women earned, on average, 20% less than men globally in 2023. Moreover, women continue to be underrepresented in leadership positions and high-paying industries, highlighting persistent challenges in achieving workplace equity.\nIn the United States, gender equality is further influenced by state-level political ideologies. Labor policies such as minimum wage regulations, paid parental leave, and workplace protections vary significantly between conservative (red) and liberal (blue) states, leading to differences in wage equality and female workforce participation (Blau and Kahn (2017)). Examining these policy variations is crucial to understanding the systemic factors shaping gender-based employment disparities."
  },
  {
    "objectID": "introduction.html#why-is-this-topic-important",
    "href": "introduction.html#why-is-this-topic-important",
    "title": "Mind the Gap: Gender, Wages, and the Workforce Divide",
    "section": "Why Is This Topic Important?",
    "text": "Why Is This Topic Important?\n\n\n\n(ChatGPT (2025))\n\n\nGender disparities in the labor market not only impact fairness and equity, but also have profound implications for economic growth, business performance, and social development. Persistent pay inequality, occupational segregation, and gender discrimination in hiring can limit women’s labor force participation and hinder overall economic sustainability.\nMoreover, as labor policies diverge across states, it becomes increasingly important to analyze their impact on gendered employment patterns. Differences in wage transparency laws, parental leave policies, and anti-discrimination protections can either exacerbate or mitigate the gender wage gap. By exploring these trends, this research aims to provide data-driven insights to support policies promoting gender equality in the workforce."
  },
  {
    "objectID": "introduction.html#key-trends-in-2024",
    "href": "introduction.html#key-trends-in-2024",
    "title": "Mind the Gap: Gender, Wages, and the Workforce Divide",
    "section": "Key Trends in 2024",
    "text": "Key Trends in 2024\nSeveral key trends make this a crucial area of study in 2024:\n\nPersistence of the Pay Gap – (Blau and Kahn (2017)) found that the closing of the gender pay gap slowed after 2010, with 38% of the gap unexplained by education or experience. This persistent disparity may be attributed to implicit bias or industry segregation.\n\nIndustry Gender Segregation – Women continue to be overrepresented in industries such as education and healthcare, while comprising less than 30% of the workforce in engineering and computer science (Labor Statistics (2023))."
  },
  {
    "objectID": "introduction.html#expected-findings",
    "href": "introduction.html#expected-findings",
    "title": "Mind the Gap: Gender, Wages, and the Workforce Divide",
    "section": "Expected Findings",
    "text": "Expected Findings\nThis study is expected to identify the following trends:\n\nGender hiring patterns across industries – Men continue to dominate the tech industry, while the healthcare and education sectors remain female-dominated (Basu et al. (2023)).\n\nImpact of the policy environment on gender equality – States with progressive labor policies (blue states) are expected to perform better in closing the gender wage gap and increasing female participation in high-paying industries. Conversely, red states are likely to exhibit larger pay gaps and lower rates of female career advancement (Padova and Dhabi (2024)).\n\nBy integrating data across states and industries, this study will reveal how policy environments and industry characteristics interact to shape gender disparities in employment. The findings will contribute to evidence-based labor policies aimed at reducing workforce inequalities."
  },
  {
    "objectID": "introduction.html#literature-review",
    "href": "introduction.html#literature-review",
    "title": "Mind the Gap: Gender, Wages, and the Workforce Divide",
    "section": "Literature Review",
    "text": "Literature Review\nSome studies on gender disparities in hiring have focused on the persistent inequalities shaped by organizational structures, labor market conditions, cultural backgrounds, and political influences. (Campero and Fernandez (2019)) explore how the gender composition of the labor force impacts hiring outcomes, finding that both men and women face disadvantages when applying for positions where the opposite gender dominates. Similarly, (Gorman (2005)) highlights the role of gender stereotypes and group biases in hiring decisions. Selection criteria that emphasize traditionally masculine traits tend to reduce women’s representation in certain industries, whereas female decision-makers are more likely to hire other women. (Birkelund et al. (2022)) take a cross-national approach, revealing minimal discrimination against women in hiring but noting bias against men in some European countries. Their findings suggest that hiring biases can vary depending on institutional and cultural contexts.\nSome research also demonstrates how the intersection of gender disparities and political influences makes labor market dynamics even more complex. (May and McGarvey (2017)) examine geographic differences in gender representation across occupations and find that conservative-leaning states tend to have more pronounced occupational segregation by gender, while blue states exhibit more integrated labor markets. This suggests that cultural and policy differences between conservative and liberal states contribute to disparities in hiring practices and workforce diversity. Expanding on this analysis, (McVeigh and Sobolewski (2007)) link occupational segregation to political outcomes, arguing that Republican-leaning counties often have more rigid gender-based occupational divisions, reinforcing economic and social inequality. These findings indicate that gender-based employment disparities are not just the result of individual biases or company-level practices, but are also embedded in broader political and cultural environments, shaping both labor market participation and electoral behavior."
  },
  {
    "objectID": "ml_methods.html",
    "href": "ml_methods.html",
    "title": "Machine Learning Methods: Gender Disparities and Political Influence",
    "section": "",
    "text": "This section aims to investigate the intersection of gender, occupation, and political geography through the lens of machine learning. The analysis is based primarily on the Lightcast Job Postings dataset (Lightcast (2024)), which contains detailed job posting information across U.S. states, occupations, and industries. To enhance the demographic insight, we merged this with gender employment statistics from the U.S. Bureau of Labor Statistics[bls2023gender], using occupational categories as the joining key.\nSpecifically, we pursue the following objectives:\n\nApply unsupervised learning (KMeans clustering) to identify natural groupings of occupations based on gender representation.\nBuild classification models to predict gender dominance using regional, occupational, and industry-level features.\nAnalyze political geography by comparing gender dominance patterns across red and blue states.\nVisualize the distribution of gender-dominated jobs across states through maps and word clouds to uncover regional and ideological disparities.\n\n\n\nTo explore gender disparities in occupational distribution, we combined two key data sources:\n\nThe Lightcast Job Postings dataset (Lightcast (2024)), which provides job postings with associated industry and occupation information.\nU.S. gender employment statistics from the Bureau of Labor Statistics (U.S. Bureau of Labor Statistics (2023)), which include counts of women and total employees in detailed occupations.\n\nWe merged the datasets by aligning NAICS industry codes to standard ONET occupation categories, calculating the female_ratio (number of women divided by total employees) for each occupation. The final cleaned dataset includes unique occupations with their associated industry and gender composition.\n\n\nCode\nimport pandas as pd\n\nxlsx_path = \"/home/ubuntu/ad688-employability-sp25A1-group8-1/data/employment_gender.xlsx\"\njob_posting_path = \"/home/ubuntu/github-classroom/met-ad-688/assignment-03-zimozeng12/lightcast_job_postings.csv\"\n\ndf_gender = pd.read_excel(xlsx_path, sheet_name=\"Sheet1\", engine=\"openpyxl\")\ndf_gender[\"female_ratio\"] = df_gender[\"women\"] / df_gender[\"total\"]\n\ndf_jobs = pd.read_csv(job_posting_path, low_memory=False)\ndf_jobs[\"NAICS2\"] = pd.to_numeric(df_jobs[\"NAICS2\"], errors=\"coerce\")\n\nnaics_to_occupation = {\n    11: \"Farming, fishing, and forestry occupations\",\n    21: \"Natural resources, construction, and maintenance occupations\",\n    22: \"Production, transportation, and material moving occupations\",\n    23: \"Construction and extraction occupations\",\n    31: \"Production, transportation, and material moving occupations\",\n    42: \"Sales and office occupations\",\n    44: \"Sales and office occupations\",\n    48: \"Production, transportation, and material moving occupations\",\n    51: \"Computer and mathematical occupations\",\n    52: \"Business and financial operations occupations\",\n    53: \"Sales and office occupations\",\n    54: \"Professional and related occupations\",\n    55: \"Management occupations\",\n    56: \"Office and administrative support occupations\",\n    61: \"Education, training, and library occupations\",\n    62: \"Healthcare practitioners and technical occupations\",\n    71: \"Arts, design, entertainment, sports, and media occupations\",\n    72: \"Food preparation and serving related occupations\",\n    81: \"Personal care and service occupations\",\n    92: \"Public Administration\",\n    99: \"Unclassified\"\n}\ndf_jobs[\"Occupation\"] = df_jobs[\"NAICS2\"].map(naics_to_occupation)\n\ndf_merged = df_jobs.merge(\n    df_gender[[\"occupation\", \"female_ratio\"]],\n    left_on=\"Occupation\", right_on=\"occupation\", how=\"left\"\n)\n\ndf_cleaned = (\n    df_merged[[\"NAICS2_NAME\", \"Occupation\", \"female_ratio\"]]\n    .dropna()\n    .sort_values(\"female_ratio\", ascending=False)\n    .drop_duplicates(subset=\"Occupation\", keep=\"first\")\n    .reset_index(drop=True)\n)\n\nfrom IPython.display import display\ndisplay(df_cleaned)\n\n\n\n\n\n\n\n\n\nNAICS2_NAME\nOccupation\nfemale_ratio\n\n\n\n\n0\nHealth Care and Social Assistance\nHealthcare practitioners and technical occupat...\n0.758788\n\n\n1\nOther Services (except Public Administration)\nPersonal care and service occupations\n0.748341\n\n\n2\nEducational Services\nEducation, training, and library occupations\n0.727640\n\n\n3\nAdministrative and Support and Waste Managemen...\nOffice and administrative support occupations\n0.712298\n\n\n4\nWholesale Trade\nSales and office occupations\n0.605601\n\n\n5\nProfessional, Scientific, and Technical Services\nProfessional and related occupations\n0.565025\n\n\n6\nFinance and Insurance\nBusiness and financial operations occupations\n0.539946\n\n\n7\nAccommodation and Food Services\nFood preparation and serving related occupations\n0.539016\n\n\n8\nArts, Entertainment, and Recreation\nArts, design, entertainment, sports, and media...\n0.480161\n\n\n9\nManagement of Companies and Enterprises\nManagement occupations\n0.419353\n\n\n10\nAgriculture, Forestry, Fishing and Hunting\nFarming, fishing, and forestry occupations\n0.270517\n\n\n11\nInformation\nComputer and mathematical occupations\n0.268840\n\n\n12\nManufacturing\nProduction, transportation, and material movin...\n0.249274\n\n\n13\nMining, Quarrying, and Oil and Gas Extraction\nNatural resources, construction, and maintenan...\n0.058216\n\n\n14\nConstruction\nConstruction and extraction occupations\n0.043041\n\n\n\n\n\n\n\n\n\n\nWe begin our analysis by applying KMeans clustering to examine gender-related occupational patterns across industries. Using the female_ratio (proportion of women in each occupation) as the core feature, we explore latent structures in the labor market.\n\n\nWe aligned job postings with ONET standard occupation classifications and used these as contextual anchors for clustering. Each occupation was mapped from NAICS industry codes to ONET categories.\n\n\n\nTo determine the ideal number of clusters (k), we used the Elbow Method, plotting inertia values (within-cluster sum of squares) against k. The curve showed a sharp drop up to k=3, after which improvements diminished. This suggests that k=3 is the most balanced choice between complexity and interpretability.\n\n\nCode\nfrom sklearn.cluster import KMeans\nimport plotly.express as px\n\nX = df_cleaned[[\"female_ratio\"]].values\n\nkmeans = KMeans(n_clusters=3, random_state=42)\ndf_cleaned[\"Cluster\"] = kmeans.fit_predict(X)\n\ndf_cleaned[\"Cluster\"] = df_cleaned[\"Cluster\"] + 1\n\n\n\n\nCode\nimport plotly.graph_objects as go\nfrom sklearn.cluster import KMeans\nimport numpy as np\nimport plotly.io as pio\n\nX = df_cleaned[[\"female_ratio\"]].values\n\ninertia = []\nK_range = range(1, 10)\n\nfor k in K_range:\n    kmeans = KMeans(n_clusters=k, random_state=42)\n    kmeans.fit(X)\n    inertia.append(kmeans.inertia_)\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=list(K_range),\n    y=inertia,\n    mode='lines+markers',\n    marker=dict(size=8),\n    line=dict(width=2),\n    name=\"Inertia\"\n))\n\nfig.update_layout(\n    title=\"Elbow Method for Optimal k (KMeans)\",\n    xaxis_title=\"Number of Clusters (k)\",\n    yaxis_title=\"Inertia (Within-Cluster Sum of Squares)\",\n    template=\"plotly_white\"\n)\n\nfig.write_image(\"_output/ml_1_kmeans.png\")\nfig.show()\n\n\n        \n        \n        \n\n\n                            \n                                            \n\n\n\n\n\nThe resulting dataset exhibits a clear stratification of gender representation across occupational clusters:\n\nCluster 1: Female-Dominated – Includes industries like healthcare, education, and personal services, where women comprise over 70% of the workforce. These roles tend to be service-oriented and caregiving in nature.\nCluster 2: Mixed-Gender – Comprises fields like finance, administration, and professional services, showing near gender parity or moderate imbalance.\nCluster 3: Male-Dominated – Includes occupations in construction, manufacturing, and technical sectors, with female participation often below 30%, sometimes as low as 4%.\n\nThis distribution aligns with well-documented patterns in labor economics literature, where occupational segregation plays a major role in shaping gender dynamics and wage inequality.\nEach occupation was assigned a cluster based on its female_ratio, and visualized using a scatter plot:\n\n\nCode\ncluster_means = df_cleaned.groupby(\"Cluster\")[\"female_ratio\"].mean().sort_values()\n\ncluster_ordered = cluster_means.index.tolist()\n\ncluster_to_label = {\n    cluster_ordered[0]: \"Male-dominated\",\n    cluster_ordered[1]: \"Mixed\",\n    cluster_ordered[2]: \"Female-dominated\"\n}\n\ndf_cleaned[\"Cluster_Label\"] = df_cleaned[\"Cluster\"].map(cluster_to_label)\n\n\n\n\nCode\nfig = px.scatter(\n    df_cleaned,\n    x=\"female_ratio\",\n    y=\"Occupation\",\n    color=\"Cluster_Label\",\n    hover_data=[\"NAICS2_NAME\", \"Cluster\"],\n    title=\"KMeans Clustering on Female Ratio (Labeled as Gender Dominance)\",\n    labels={\"female_ratio\": \"Female Ratio\", \"Occupation\": \"Occupation\"},\n    height=600\n)\n\nfig.update_traces(marker=dict(size=12, line=dict(width=1, color='DarkSlateGrey')))\nfig.update_layout(template=\"plotly_white\", legend_title_text=\"Gender Dominance\")\nfig.write_image(\"_output/ml_2_clustering.png\")\nfig.show()\n\n\n                            \n                                            \n\n\nThis unsupervised learning step allows us to categorize occupations systematically and provides a foundation for further supervised modeling and political analysis.\n\n\n\n\nAfter clustering occupations by gender composition, we analyzed salary disparities across these clusters. The salaries were averaged and formatted to two decimal places for clarity.\n\n\nCode\ndf_jobs[\"Occupation\"] = df_jobs[\"NAICS2\"].map(naics_to_occupation)\n\ndf_salary = df_jobs[[\"Occupation\", \"SALARY\", \"SALARY_FROM\", \"SALARY_TO\", \"NAICS2_NAME\"]]\n\ndf_salary_grouped = (\n    df_salary\n    .groupby(\"Occupation\")[[\"SALARY\", \"SALARY_FROM\", \"SALARY_TO\"]]\n    .mean()\n    .reset_index()\n)\n\ndf_cleaned_salary = df_cleaned.merge(df_salary_grouped, on=\"Occupation\", how=\"left\")\n\nsalary_summary = (\n    df_cleaned_salary\n    .groupby(\"Cluster_Label\")[[\"SALARY\", \"SALARY_FROM\", \"SALARY_TO\"]]\n    .agg([\"mean\", \"median\", \"count\"])\n    .round()\n)\n\ndisplay(salary_summary)\n\n\n\n\n\n\n\n\n\nSALARY\nSALARY_FROM\nSALARY_TO\n\n\n\nmean\nmedian\ncount\nmean\nmedian\ncount\nmean\nmedian\ncount\n\n\nCluster_Label\n\n\n\n\n\n\n\n\n\n\n\n\n\nFemale-dominated\n94055.0\n96352.0\n4\n79493.0\n79391.0\n4\n103683.0\n105710.0\n4\n\n\nMale-dominated\n115422.0\n115134.0\n5\n94387.0\n95448.0\n5\n131923.0\n127799.0\n5\n\n\nMixed\n118009.0\n115698.0\n6\n92756.0\n89902.0\n6\n137956.0\n134247.0\n6\n\n\n\n\n\n\n\n\n\n\n\nFemale-dominated occupations earn significantly less on average than male-dominated and mixed clusters.\nThe highest earning group is the “Mixed” cluster, suggesting that gender-integrated occupations may offer more competitive wages.\nThe wage gap is nontrivial, with male-dominated jobs paying over $20,000 more than female-dominated ones on average.\nThese trends are consistent across SALARY_FROM and SALARY_TO ranges as well, showing robustness.\n\n\n\nCode\nimport plotly.express as px\n\nfig = px.bar(\n    df_cleaned_salary,\n    x=\"Cluster_Label\",\n    y=\"SALARY\",\n    color=\"Cluster_Label\",\n    title=\"Average Salary by Gender Cluster\",\n    labels={\"SALARY\": \"Average Salary\"},\n    height=500\n)\nfig.update_layout(template=\"plotly_white\", showlegend=False)\nfig.write_image(\"_output/ml_3_gender_cluster.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n\n\n\nThe bar chart below clearly visualizes these differences, highlighting that:\nFemale-dominated roles tend to cluster in the lower salary range.\nMixed-gender roles span a much broader and higher salary spectrum.\nMale-dominated roles sit in between but still significantly above the female cluster.\n\n\nWe observe a consistent pattern in salary distribution by cluster: occupations classified as female-dominated tend to have the lowest compensation, while mixed-gender and male-dominated fields show significantly higher average and maximum salaries. These findings echo prior literature on occupational segregation and wage inequality (Blau and Kahn (2017))."
  },
  {
    "objectID": "ml_methods.html#objectives",
    "href": "ml_methods.html#objectives",
    "title": "Machine Learning Methods: Gender Disparities and Political Influence",
    "section": "",
    "text": "This section aims to investigate the intersection of gender, occupation, and political geography through the lens of machine learning. The analysis is based primarily on the Lightcast Job Postings dataset (Lightcast (2024)), which contains detailed job posting information across U.S. states, occupations, and industries. To enhance the demographic insight, we merged this with gender employment statistics from the U.S. Bureau of Labor Statistics[bls2023gender], using occupational categories as the joining key.\nSpecifically, we pursue the following objectives:\n\nApply unsupervised learning (KMeans clustering) to identify natural groupings of occupations based on gender representation.\nBuild classification models to predict gender dominance using regional, occupational, and industry-level features.\nAnalyze political geography by comparing gender dominance patterns across red and blue states.\nVisualize the distribution of gender-dominated jobs across states through maps and word clouds to uncover regional and ideological disparities.\n\n\n\nTo explore gender disparities in occupational distribution, we combined two key data sources:\n\nThe Lightcast Job Postings dataset (Lightcast (2024)), which provides job postings with associated industry and occupation information.\nU.S. gender employment statistics from the Bureau of Labor Statistics (U.S. Bureau of Labor Statistics (2023)), which include counts of women and total employees in detailed occupations.\n\nWe merged the datasets by aligning NAICS industry codes to standard ONET occupation categories, calculating the female_ratio (number of women divided by total employees) for each occupation. The final cleaned dataset includes unique occupations with their associated industry and gender composition.\n\n\nCode\nimport pandas as pd\n\nxlsx_path = \"/home/ubuntu/ad688-employability-sp25A1-group8-1/data/employment_gender.xlsx\"\njob_posting_path = \"/home/ubuntu/github-classroom/met-ad-688/assignment-03-zimozeng12/lightcast_job_postings.csv\"\n\ndf_gender = pd.read_excel(xlsx_path, sheet_name=\"Sheet1\", engine=\"openpyxl\")\ndf_gender[\"female_ratio\"] = df_gender[\"women\"] / df_gender[\"total\"]\n\ndf_jobs = pd.read_csv(job_posting_path, low_memory=False)\ndf_jobs[\"NAICS2\"] = pd.to_numeric(df_jobs[\"NAICS2\"], errors=\"coerce\")\n\nnaics_to_occupation = {\n    11: \"Farming, fishing, and forestry occupations\",\n    21: \"Natural resources, construction, and maintenance occupations\",\n    22: \"Production, transportation, and material moving occupations\",\n    23: \"Construction and extraction occupations\",\n    31: \"Production, transportation, and material moving occupations\",\n    42: \"Sales and office occupations\",\n    44: \"Sales and office occupations\",\n    48: \"Production, transportation, and material moving occupations\",\n    51: \"Computer and mathematical occupations\",\n    52: \"Business and financial operations occupations\",\n    53: \"Sales and office occupations\",\n    54: \"Professional and related occupations\",\n    55: \"Management occupations\",\n    56: \"Office and administrative support occupations\",\n    61: \"Education, training, and library occupations\",\n    62: \"Healthcare practitioners and technical occupations\",\n    71: \"Arts, design, entertainment, sports, and media occupations\",\n    72: \"Food preparation and serving related occupations\",\n    81: \"Personal care and service occupations\",\n    92: \"Public Administration\",\n    99: \"Unclassified\"\n}\ndf_jobs[\"Occupation\"] = df_jobs[\"NAICS2\"].map(naics_to_occupation)\n\ndf_merged = df_jobs.merge(\n    df_gender[[\"occupation\", \"female_ratio\"]],\n    left_on=\"Occupation\", right_on=\"occupation\", how=\"left\"\n)\n\ndf_cleaned = (\n    df_merged[[\"NAICS2_NAME\", \"Occupation\", \"female_ratio\"]]\n    .dropna()\n    .sort_values(\"female_ratio\", ascending=False)\n    .drop_duplicates(subset=\"Occupation\", keep=\"first\")\n    .reset_index(drop=True)\n)\n\nfrom IPython.display import display\ndisplay(df_cleaned)\n\n\n\n\n\n\n\n\n\nNAICS2_NAME\nOccupation\nfemale_ratio\n\n\n\n\n0\nHealth Care and Social Assistance\nHealthcare practitioners and technical occupat...\n0.758788\n\n\n1\nOther Services (except Public Administration)\nPersonal care and service occupations\n0.748341\n\n\n2\nEducational Services\nEducation, training, and library occupations\n0.727640\n\n\n3\nAdministrative and Support and Waste Managemen...\nOffice and administrative support occupations\n0.712298\n\n\n4\nWholesale Trade\nSales and office occupations\n0.605601\n\n\n5\nProfessional, Scientific, and Technical Services\nProfessional and related occupations\n0.565025\n\n\n6\nFinance and Insurance\nBusiness and financial operations occupations\n0.539946\n\n\n7\nAccommodation and Food Services\nFood preparation and serving related occupations\n0.539016\n\n\n8\nArts, Entertainment, and Recreation\nArts, design, entertainment, sports, and media...\n0.480161\n\n\n9\nManagement of Companies and Enterprises\nManagement occupations\n0.419353\n\n\n10\nAgriculture, Forestry, Fishing and Hunting\nFarming, fishing, and forestry occupations\n0.270517\n\n\n11\nInformation\nComputer and mathematical occupations\n0.268840\n\n\n12\nManufacturing\nProduction, transportation, and material movin...\n0.249274\n\n\n13\nMining, Quarrying, and Oil and Gas Extraction\nNatural resources, construction, and maintenan...\n0.058216\n\n\n14\nConstruction\nConstruction and extraction occupations\n0.043041\n\n\n\n\n\n\n\n\n\n\nWe begin our analysis by applying KMeans clustering to examine gender-related occupational patterns across industries. Using the female_ratio (proportion of women in each occupation) as the core feature, we explore latent structures in the labor market.\n\n\nWe aligned job postings with ONET standard occupation classifications and used these as contextual anchors for clustering. Each occupation was mapped from NAICS industry codes to ONET categories.\n\n\n\nTo determine the ideal number of clusters (k), we used the Elbow Method, plotting inertia values (within-cluster sum of squares) against k. The curve showed a sharp drop up to k=3, after which improvements diminished. This suggests that k=3 is the most balanced choice between complexity and interpretability.\n\n\nCode\nfrom sklearn.cluster import KMeans\nimport plotly.express as px\n\nX = df_cleaned[[\"female_ratio\"]].values\n\nkmeans = KMeans(n_clusters=3, random_state=42)\ndf_cleaned[\"Cluster\"] = kmeans.fit_predict(X)\n\ndf_cleaned[\"Cluster\"] = df_cleaned[\"Cluster\"] + 1\n\n\n\n\nCode\nimport plotly.graph_objects as go\nfrom sklearn.cluster import KMeans\nimport numpy as np\nimport plotly.io as pio\n\nX = df_cleaned[[\"female_ratio\"]].values\n\ninertia = []\nK_range = range(1, 10)\n\nfor k in K_range:\n    kmeans = KMeans(n_clusters=k, random_state=42)\n    kmeans.fit(X)\n    inertia.append(kmeans.inertia_)\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=list(K_range),\n    y=inertia,\n    mode='lines+markers',\n    marker=dict(size=8),\n    line=dict(width=2),\n    name=\"Inertia\"\n))\n\nfig.update_layout(\n    title=\"Elbow Method for Optimal k (KMeans)\",\n    xaxis_title=\"Number of Clusters (k)\",\n    yaxis_title=\"Inertia (Within-Cluster Sum of Squares)\",\n    template=\"plotly_white\"\n)\n\nfig.write_image(\"_output/ml_1_kmeans.png\")\nfig.show()\n\n\n        \n        \n        \n\n\n                            \n                                            \n\n\n\n\n\nThe resulting dataset exhibits a clear stratification of gender representation across occupational clusters:\n\nCluster 1: Female-Dominated – Includes industries like healthcare, education, and personal services, where women comprise over 70% of the workforce. These roles tend to be service-oriented and caregiving in nature.\nCluster 2: Mixed-Gender – Comprises fields like finance, administration, and professional services, showing near gender parity or moderate imbalance.\nCluster 3: Male-Dominated – Includes occupations in construction, manufacturing, and technical sectors, with female participation often below 30%, sometimes as low as 4%.\n\nThis distribution aligns with well-documented patterns in labor economics literature, where occupational segregation plays a major role in shaping gender dynamics and wage inequality.\nEach occupation was assigned a cluster based on its female_ratio, and visualized using a scatter plot:\n\n\nCode\ncluster_means = df_cleaned.groupby(\"Cluster\")[\"female_ratio\"].mean().sort_values()\n\ncluster_ordered = cluster_means.index.tolist()\n\ncluster_to_label = {\n    cluster_ordered[0]: \"Male-dominated\",\n    cluster_ordered[1]: \"Mixed\",\n    cluster_ordered[2]: \"Female-dominated\"\n}\n\ndf_cleaned[\"Cluster_Label\"] = df_cleaned[\"Cluster\"].map(cluster_to_label)\n\n\n\n\nCode\nfig = px.scatter(\n    df_cleaned,\n    x=\"female_ratio\",\n    y=\"Occupation\",\n    color=\"Cluster_Label\",\n    hover_data=[\"NAICS2_NAME\", \"Cluster\"],\n    title=\"KMeans Clustering on Female Ratio (Labeled as Gender Dominance)\",\n    labels={\"female_ratio\": \"Female Ratio\", \"Occupation\": \"Occupation\"},\n    height=600\n)\n\nfig.update_traces(marker=dict(size=12, line=dict(width=1, color='DarkSlateGrey')))\nfig.update_layout(template=\"plotly_white\", legend_title_text=\"Gender Dominance\")\nfig.write_image(\"_output/ml_2_clustering.png\")\nfig.show()\n\n\n                            \n                                            \n\n\nThis unsupervised learning step allows us to categorize occupations systematically and provides a foundation for further supervised modeling and political analysis.\n\n\n\n\nAfter clustering occupations by gender composition, we analyzed salary disparities across these clusters. The salaries were averaged and formatted to two decimal places for clarity.\n\n\nCode\ndf_jobs[\"Occupation\"] = df_jobs[\"NAICS2\"].map(naics_to_occupation)\n\ndf_salary = df_jobs[[\"Occupation\", \"SALARY\", \"SALARY_FROM\", \"SALARY_TO\", \"NAICS2_NAME\"]]\n\ndf_salary_grouped = (\n    df_salary\n    .groupby(\"Occupation\")[[\"SALARY\", \"SALARY_FROM\", \"SALARY_TO\"]]\n    .mean()\n    .reset_index()\n)\n\ndf_cleaned_salary = df_cleaned.merge(df_salary_grouped, on=\"Occupation\", how=\"left\")\n\nsalary_summary = (\n    df_cleaned_salary\n    .groupby(\"Cluster_Label\")[[\"SALARY\", \"SALARY_FROM\", \"SALARY_TO\"]]\n    .agg([\"mean\", \"median\", \"count\"])\n    .round()\n)\n\ndisplay(salary_summary)\n\n\n\n\n\n\n\n\n\nSALARY\nSALARY_FROM\nSALARY_TO\n\n\n\nmean\nmedian\ncount\nmean\nmedian\ncount\nmean\nmedian\ncount\n\n\nCluster_Label\n\n\n\n\n\n\n\n\n\n\n\n\n\nFemale-dominated\n94055.0\n96352.0\n4\n79493.0\n79391.0\n4\n103683.0\n105710.0\n4\n\n\nMale-dominated\n115422.0\n115134.0\n5\n94387.0\n95448.0\n5\n131923.0\n127799.0\n5\n\n\nMixed\n118009.0\n115698.0\n6\n92756.0\n89902.0\n6\n137956.0\n134247.0\n6\n\n\n\n\n\n\n\n\n\n\n\nFemale-dominated occupations earn significantly less on average than male-dominated and mixed clusters.\nThe highest earning group is the “Mixed” cluster, suggesting that gender-integrated occupations may offer more competitive wages.\nThe wage gap is nontrivial, with male-dominated jobs paying over $20,000 more than female-dominated ones on average.\nThese trends are consistent across SALARY_FROM and SALARY_TO ranges as well, showing robustness.\n\n\n\nCode\nimport plotly.express as px\n\nfig = px.bar(\n    df_cleaned_salary,\n    x=\"Cluster_Label\",\n    y=\"SALARY\",\n    color=\"Cluster_Label\",\n    title=\"Average Salary by Gender Cluster\",\n    labels={\"SALARY\": \"Average Salary\"},\n    height=500\n)\nfig.update_layout(template=\"plotly_white\", showlegend=False)\nfig.write_image(\"_output/ml_3_gender_cluster.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n\n\n\nThe bar chart below clearly visualizes these differences, highlighting that:\nFemale-dominated roles tend to cluster in the lower salary range.\nMixed-gender roles span a much broader and higher salary spectrum.\nMale-dominated roles sit in between but still significantly above the female cluster.\n\n\nWe observe a consistent pattern in salary distribution by cluster: occupations classified as female-dominated tend to have the lowest compensation, while mixed-gender and male-dominated fields show significantly higher average and maximum salaries. These findings echo prior literature on occupational segregation and wage inequality (Blau and Kahn (2017))."
  },
  {
    "objectID": "ml_methods.html#political-influence-red-vs.-blue-states-and-gender-dominated-jobs",
    "href": "ml_methods.html#political-influence-red-vs.-blue-states-and-gender-dominated-jobs",
    "title": "Machine Learning Methods: Gender Disparities and Political Influence",
    "section": "2 🗳️ Political Influence: Red vs. Blue States and Gender-Dominated Jobs",
    "text": "2 🗳️ Political Influence: Red vs. Blue States and Gender-Dominated Jobs\nBuilding upon the gender clustering analysis, we now shift our lens to political geography—exploring how gender-dominated occupations are distributed across red and blue states in the U.S.\nTo enable this, we added a STATE_NAME field to each occupation in our salary-enhanced dataset and manually mapped each state to its political leaning:\n\n🟥 Red states: Texas, Florida, Alabama, Mississippi, Tennessee\n\n🟦 Blue states: California, New York, Massachusetts, Illinois, Washington\n\nWe then classified each job cluster by state, and grouped the counts of female-dominated, male-dominated, and mixed occupations per political alignment.\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\n\nus_state_abbrev = {\n    'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR', 'California': 'CA',\n    'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE', 'Florida': 'FL', 'Georgia': 'GA',\n    'Hawaii': 'HI', 'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA',\n    'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\n    'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS', 'Missouri': 'MO',\n    'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV', 'New Hampshire': 'NH', 'New Jersey': 'NJ',\n    'New Mexico': 'NM', 'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND', 'Ohio': 'OH',\n    'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA', 'Rhode Island': 'RI', 'South Carolina': 'SC',\n    'South Dakota': 'SD', 'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT',\n    'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV', 'Wisconsin': 'WI', 'Wyoming': 'WY',\n    'District of Columbia': 'DC'\n}\n\nblue_states = [\"California\", \"New York\", \"Massachusetts\", \"Illinois\", \"Washington\"]\nred_states = [\"Texas\", \"Florida\", \"Alabama\", \"Mississippi\", \"Tennessee\"]\n\ndf_cleaned_salary = df_cleaned_salary.merge(\n    df_jobs[[\"Occupation\", \"STATE_NAME\"]].drop_duplicates(),\n    on=\"Occupation\",\n    how=\"left\"\n)\n\ndf_cleaned_salary[\"State_Political\"] = df_cleaned_salary[\"STATE_NAME\"].apply(\n    lambda x: \"Blue\" if x in blue_states else (\"Red\" if x in red_states else None)\n)\n\ndf_polarized = df_cleaned_salary[df_cleaned_salary[\"State_Political\"].notna()].copy()\n\nsummary = (\n    df_polarized.groupby([\"State_Political\", \"Cluster_Label\"])\n    .size()\n    .unstack()\n    .fillna(0)\n    .astype(int)\n)\n\n\n\n\nCode\nsummary_percent = summary.div(summary.sum(axis=1), axis=0).round(3) * 100\ndisplay(summary_percent)\n\n\n\n\n\n\n\n\nCluster_Label\nFemale-dominated\nMale-dominated\nMixed\n\n\nState_Political\n\n\n\n\n\n\n\nBlue\n27.4\n31.5\n41.1\n\n\nRed\n29.0\n30.4\n40.6\n\n\n\n\n\n\n\nDespite slight variations, both red and blue states show remarkably similar distributions across the three clusters.\n\n2.0.1 📉 Visual Representation\nTo better understand the comparison, we visualize the absolute job counts for each cluster in red and blue states:\n\n\nCode\ndf_plot = df_polarized.groupby([\"State_Political\", \"Cluster_Label\"]).size().reset_index(name=\"Count\")\n\nfig = px.bar(\n    df_plot,\n    x=\"State_Political\",\n    y=\"Count\",\n    color=\"Cluster_Label\",\n    barmode=\"stack\",\n    title=\"Gender-Dominated Job Clusters by State Political Leaning\",\n    height=500\n)\n\nfig.update_layout(template=\"plotly_white\")\nfig.write_image(\"_output/ml_4_gender-dominated_cluster.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n\n2.0.2 Key Takeaways\n\nMixed-gender occupations dominate in both political groups.\nRed states exhibit a slightly higher proportion of female-dominated roles, but the difference is marginal.\nThe overall gender cluster landscape is relatively stable across political lines, suggesting that broader economic structures may drive occupational gender distributions more than politics alone.\n\n\n\n2.1 Geographic Visualization of Gender Cluster Dominance\nTo further investigate the regional disparities, we visualized the state-level proportion of gender-dominated jobs using choropleth maps.\n\n\nCode\ndf_state_cluster = (\n    df_cleaned_salary\n    .groupby([\"STATE_NAME\", \"Cluster_Label\"])\n    .size()\n    .unstack(fill_value=0)\n    .reset_index()\n)\n\ndf_state_cluster[\"Total\"] = (\n    df_state_cluster[\"Female-dominated\"]\n    + df_state_cluster[\"Male-dominated\"]\n    + df_state_cluster[\"Mixed\"]\n)\n\ndf_state_cluster[\"female_ratio\"] = df_state_cluster[\"Female-dominated\"] / df_state_cluster[\"Total\"]\ndf_state_cluster[\"male_ratio\"] = df_state_cluster[\"Male-dominated\"] / df_state_cluster[\"Total\"]\ndf_state_cluster[\"mixed_ratio\"] = df_state_cluster[\"Mixed\"] / df_state_cluster[\"Total\"]\n\ndf_state_cluster[\"STATE_ABBR\"] = df_state_cluster[\"STATE_NAME\"].map(us_state_abbrev)\n\ndf_state_cluster[\"Political\"] = df_state_cluster[\"STATE_NAME\"].apply(\n    lambda x: \"Blue\" if x in blue_states else (\"Red\" if x in red_states else \"Other\")\n)\n\n\n\n2.1.1 Female-Dominated Jobs\n\nFemale-dominated jobs are relatively more concentrated in the Midwest and Northeast.\n\n\n\nCode\nimport plotly.express as px\n\nfig = px.choropleth(\n    df_state_cluster,\n    locations=\"STATE_ABBR\",\n    locationmode=\"USA-states\",\n    color=\"female_ratio\",\n    hover_name=\"STATE_NAME\",\n    hover_data=[\"female_ratio\", \"Political\"],\n    color_continuous_scale=px.colors.sequential.Pinkyl,\n    title=\"Proportion of Female-Dominated Jobs by State\",\n    scope=\"usa\"\n)\n\nfig.update_layout(template=\"plotly_white\")\nfig.write_image(\"_output/ml_5_female-dominated_state.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n\n2.1.2 Male-Dominated Jobs\n\nMale-dominated jobs show higher proportions in Southern and industrial regions, especially in states like West Virginia and Kentucky.\n\n\n\nCode\nfig = px.choropleth(\n    df_state_cluster,\n    locations=\"STATE_ABBR\",\n    locationmode=\"USA-states\",\n    color=\"male_ratio\",\n    hover_name=\"STATE_NAME\",\n    hover_data=[\"male_ratio\", \"Political\"],\n    color_continuous_scale=px.colors.sequential.Blues,\n    title=\"Proportion of Male-Dominated Jobs by State\",\n    scope=\"usa\"\n)\nfig.update_layout(template=\"plotly_white\")\nfig.write_image(\"_output/ml_6_male-dominated_state.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n\n2.1.3 Mixed-Gender Jobs\n\nMixed-gender clusters are more evenly distributed but slightly higher in Western and Northern states.\n\n\n\nCode\nfig = px.choropleth(\n    df_state_cluster,\n    locations=\"STATE_ABBR\",\n    locationmode=\"USA-states\",\n    color=\"mixed_ratio\",\n    hover_name=\"STATE_NAME\",\n    hover_data=[\"mixed_ratio\", \"Political\"],\n    color_continuous_scale=px.colors.sequential.Oranges,\n    title=\"Proportion of Mixed-Dominated Jobs by State\",\n    scope=\"usa\"\n)\nfig.update_layout(template=\"plotly_white\")\nfig.write_image(\"_output/ml_7_mixed_state.png\")\nfig.show()\n\n\n                            \n                                            \n\n\nThese insights suggest that political and cultural climates may indirectly influence the gender composition of regional labor markets, potentially through policy, education access, or industry presence.\n\n\n\n2.2 State-Level Dominance by Gender Cluster\nBeyond proportions, we identified the most dominant gender cluster per state by counting the number of job categories that fall into each cluster.\n\n\nCode\ndf_state_dominance = (\n    df_cleaned_salary\n    .groupby([\"STATE_NAME\", \"Cluster_Label\"])\n    .size()\n    .unstack(fill_value=0)\n)\n\ndf_state_dominance[\"Dominant_Label\"] = df_state_dominance.idxmax(axis=1)\n\ndf_state_dominance[\"STATE_ABBR\"] = df_state_dominance.index.map(us_state_abbrev)\ndf_state_dominance[\"Political\"] = df_state_dominance.index.map(\n    lambda x: \"Blue\" if x in blue_states else (\"Red\" if x in red_states else \"Other\")\n)\n\ndf_state_dominance = df_state_dominance.reset_index()\n\n\n\n\nCode\nimport plotly.express as px\n\nfig = px.choropleth(\n    df_state_dominance,\n    locations=\"STATE_ABBR\",\n    locationmode=\"USA-states\",\n    color=\"Dominant_Label\",\n    hover_name=\"STATE_NAME\",\n    hover_data=[\"Dominant_Label\", \"Political\"],\n    scope=\"usa\",\n    color_discrete_map={\n        \"Female-dominated\": \"#FF69B4\",\n        \"Male-dominated\": \"#1E90FF\",\n        \"Mixed\": \"#90EE90\"\n    },\n    title=\" Dominant Gender Cluster by State (KMeans Result)\"\n)\n\nfig.update_layout(template=\"plotly_white\")\nfig.write_image(\"_output/ml_8_dominated_state.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n2.2.1 Interpretation:\n\nMost states are green (mixed-dominated), indicating a balanced gender structure.\nStates such as Vermont and North Dakota are pink, highlighting female-dominated leadership.\nKentucky and West Virginia appear in blue, dominated by male-leaning occupations.\n\nThis high-level overview of occupational dominance by gender reveals that while most states exhibit balanced patterns, specific regions still lean toward traditionally gendered industries. These differences may reflect deeper structural factors such as industrial composition, education access, or sociopolitical norms.\n\n\n\n2.3 Visual Summary: Word Cloud of State-Level Gender Dominance\nTo provide a more engaging summary of the state-level dominant gender clusters, we generated a word cloud where:\n\nEach state name appears with a font size proportional to the number of jobs in its dominant gender cluster.\nColors represent the type of dominance:\n\n💗 Pink for Female-dominated\n💙 Blue for Male-dominated\n💚 Green for Mixed-gender\n\n\nThis visualization effectively condenses both the magnitude of dominance (via size) and gender pattern (via color) across all U.S. states.\n\n\nCode\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\ncolor_map = {\n    \"Female-dominated\": \"#FF69B4\",\n    \"Male-dominated\": \"#1E90FF\",\n    \"Mixed\": \"#90EE90\"\n}\n\nword_freq = {}\nword_colors = {}\n\nfor _, row in df_state_dominance.iterrows():\n    state = row[\"STATE_NAME\"]\n    dominant = row[\"Dominant_Label\"]\n    size = row[dominant]\n    word_freq[state] = size\n    word_colors[state] = color_map.get(dominant, \"gray\")\n\ndef color_func(word, *args, **kwargs):\n    return word_colors.get(word, \"gray\")\n\nwc = WordCloud(\n    width=1000,\n    height=600,\n    background_color=\"white\",\n    color_func=color_func\n).generate_from_frequencies(word_freq)\n\nplt.figure(figsize=(14, 7))\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.title(\"States by Dominant Gender Cluster (Word Size = Job Count)\", fontsize=16)\nfig.write_image(\"_output/ml_9_word.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n2.3.1 Insights:\n\nCalifornia, Arizona, and Arkansas are among the most prominent states with large mixed-gender clusters.\nWest Virginia and Kentucky, though smaller in job volume, are clearly male-dominated states.\nA few female-dominated states (like Vermont and Rhode Island) appear subtly but distinctly in pink.\n\nThis word cloud serves as a high-level yet informative synthesis of our gender cluster findings across the U.S. geography.\nTogether, these visualizations illustrate that gender disparity in employment is not only occupationally segmented but also spatially structured, suggesting that:\n\nStates with differing political climates show subtle distinctions in gender job dominance.\nGeographic analysis provides essential context when interpreting labor market gender gaps.\n\nThese findings highlight the need for region-specific workforce policies that acknowledge both political realities and industry composition."
  },
  {
    "objectID": "ml-env/lib/python3.10/site-packages/narwhals-1.35.0.dist-info/licenses/LICENSE.html",
    "href": "ml-env/lib/python3.10/site-packages/narwhals-1.35.0.dist-info/licenses/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "MIT License\nCopyright (c) 2024, Marco Gorelli\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "data_analysis.html",
    "href": "data_analysis.html",
    "title": "Data Analysis",
    "section": "",
    "text": "In this study, we conduct an in-depth analysis of workforce disparities, focusing on gender, wages, and labor market trends. Our analysis is based on real-world job postings data from Lightcast Job Postings(Lightcast (2024)). To ensure a clean and reliable dataset, we first perform extensive data preprocessing, removing redundant classification codes and tracking columns. We then handle missing values and visualize their distribution using a heatmap, ensuring our dataset maintains integrity and completeness. Lastly, through various exploratory visualizations, we extract meaningful insights about industry job demand, salary distributions, and remote work trends. Our goal is to highlight key patterns that inform labor market dynamics and workforce disparities.\n\n\nCode\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\n\nCode\ndf = pd.read_csv('~/ad688-employability-sp25A1-group8/job_postings.csv')\n\n\n\n\nIn our job market analysis, certain columns in the dataset do not provide meaningful insights and should be removed. These columns may contain tracking data, duplicate information, or outdated classification codes. By removing them, we ensure our analysis is focused, relevant, and efficient.\n\n\nCode\ncolumns_to_drop = [\n    \"ID\", \"URL\", \"ACTIVE_URLS\", \"DUPLICATES\", \"LAST_UPDATED_TIMESTAMP\",\n    \"NAICS2\", \"NAICS3\", \"NAICS4\", \"NAICS5\", \"NAICS6\",\n    \"SOC_2\", \"SOC_3\", \"SOC_5\"\n]\ndf.drop(columns=columns_to_drop, inplace=True)\n\n\n\n\n\nUnique Identifiers & Tracking Data - ID: A unique identifier that does not add value to job market trends analysis. - URL, ACTIVE_URLS: Job posting URLs that do not contribute to labor market insights. - DUPLICATES: A tracking column that flags duplicate records. Instead, we will remove duplicates programmatically. - LAST_UPDATED_TIMESTAMP: Tracks data updates but does not impact our analysis.\nRedundant NAICS (Industry) and SOC (Occupation) Codes - NAICS2, NAICS3, NAICS4, NAICS5, NAICS6: Represent different levels of industry classification. We retain only NAICS_2022_6 to avoid redundancy. - SOC_2, SOC_3, SOC_5: Represent different levels of job classification. We retain SOC_2021_4 for consistency.\n\n\n\n✅ Ensures Data Consistency - Using multiple versions of NAICS/SOC codes could result in classification mismatches. - Retaining only the latest versions ensures alignment with the most recent industry and occupation standards.\n✅ Reduces Redundancy - Storing multiple levels of classification increases data complexity without adding value. - Keeping only NAICS_2022_6 and SOC_2021_4 simplifies the dataset.\n✅ Improves Analytical Accuracy - Prevents double counting due to overlapping classification levels. - Streamlines job market segmentation, making it easier to draw insights.\n\n\n\n🔹 Increases Processing Efficiency - Optimized Memory Usage: A smaller dataset reduces memory consumption, making data operations faster and more efficient. - Faster Data Processing: Removing unnecessary columns reduces computational overhead, enabling quicker transformations, queries, and aggregations. - Accelerated Data Visualization: A streamlined dataset ensures that visualizations load and render quickly.\n🔹 Enhances Data Consistency - Eliminates Conflicting Information: Multiple versions of industry and occupation classification codes (e.g., NAICS and SOC) can create inconsistencies in analysis. - Aligns with Current Standards: Retaining only NAICS_2022_6 and SOC_2021_4 ensures relevance and accuracy. - Facilitates Comparability: Standardized codes enable accurate cross-sector and job role comparisons.\n🔹 Improves Visualization Clarity - Reduces Clutter in Charts and Graphs: Too many redundant columns can overload visualizations, making them harder to interpret. - Simplifies Data Interpretation: By keeping only essential classification codes, we highlight key trends without unnecessary complexity. - Facilitates Trend Analysis: A well-structured dataset allows for clear insights into industry demand, salary distribution, and workforce trends."
  },
  {
    "objectID": "data_analysis.html#introduction",
    "href": "data_analysis.html#introduction",
    "title": "Data Analysis",
    "section": "",
    "text": "In this study, we conduct an in-depth analysis of workforce disparities, focusing on gender, wages, and labor market trends. Our analysis is based on real-world job postings data from Lightcast Job Postings(Lightcast (2024)). To ensure a clean and reliable dataset, we first perform extensive data preprocessing, removing redundant classification codes and tracking columns. We then handle missing values and visualize their distribution using a heatmap, ensuring our dataset maintains integrity and completeness. Lastly, through various exploratory visualizations, we extract meaningful insights about industry job demand, salary distributions, and remote work trends. Our goal is to highlight key patterns that inform labor market dynamics and workforce disparities.\n\n\nCode\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\n\nCode\ndf = pd.read_csv('~/ad688-employability-sp25A1-group8/job_postings.csv')\n\n\n\n\nIn our job market analysis, certain columns in the dataset do not provide meaningful insights and should be removed. These columns may contain tracking data, duplicate information, or outdated classification codes. By removing them, we ensure our analysis is focused, relevant, and efficient.\n\n\nCode\ncolumns_to_drop = [\n    \"ID\", \"URL\", \"ACTIVE_URLS\", \"DUPLICATES\", \"LAST_UPDATED_TIMESTAMP\",\n    \"NAICS2\", \"NAICS3\", \"NAICS4\", \"NAICS5\", \"NAICS6\",\n    \"SOC_2\", \"SOC_3\", \"SOC_5\"\n]\ndf.drop(columns=columns_to_drop, inplace=True)\n\n\n\n\n\nUnique Identifiers & Tracking Data - ID: A unique identifier that does not add value to job market trends analysis. - URL, ACTIVE_URLS: Job posting URLs that do not contribute to labor market insights. - DUPLICATES: A tracking column that flags duplicate records. Instead, we will remove duplicates programmatically. - LAST_UPDATED_TIMESTAMP: Tracks data updates but does not impact our analysis.\nRedundant NAICS (Industry) and SOC (Occupation) Codes - NAICS2, NAICS3, NAICS4, NAICS5, NAICS6: Represent different levels of industry classification. We retain only NAICS_2022_6 to avoid redundancy. - SOC_2, SOC_3, SOC_5: Represent different levels of job classification. We retain SOC_2021_4 for consistency.\n\n\n\n✅ Ensures Data Consistency - Using multiple versions of NAICS/SOC codes could result in classification mismatches. - Retaining only the latest versions ensures alignment with the most recent industry and occupation standards.\n✅ Reduces Redundancy - Storing multiple levels of classification increases data complexity without adding value. - Keeping only NAICS_2022_6 and SOC_2021_4 simplifies the dataset.\n✅ Improves Analytical Accuracy - Prevents double counting due to overlapping classification levels. - Streamlines job market segmentation, making it easier to draw insights.\n\n\n\n🔹 Increases Processing Efficiency - Optimized Memory Usage: A smaller dataset reduces memory consumption, making data operations faster and more efficient. - Faster Data Processing: Removing unnecessary columns reduces computational overhead, enabling quicker transformations, queries, and aggregations. - Accelerated Data Visualization: A streamlined dataset ensures that visualizations load and render quickly.\n🔹 Enhances Data Consistency - Eliminates Conflicting Information: Multiple versions of industry and occupation classification codes (e.g., NAICS and SOC) can create inconsistencies in analysis. - Aligns with Current Standards: Retaining only NAICS_2022_6 and SOC_2021_4 ensures relevance and accuracy. - Facilitates Comparability: Standardized codes enable accurate cross-sector and job role comparisons.\n🔹 Improves Visualization Clarity - Reduces Clutter in Charts and Graphs: Too many redundant columns can overload visualizations, making them harder to interpret. - Simplifies Data Interpretation: By keeping only essential classification codes, we highlight key trends without unnecessary complexity. - Facilitates Trend Analysis: A well-structured dataset allows for clear insights into industry demand, salary distribution, and workforce trends."
  },
  {
    "objectID": "data_analysis.html#handling-missing-values",
    "href": "data_analysis.html#handling-missing-values",
    "title": "Data Analysis",
    "section": "2 🔍 Handling Missing Values",
    "text": "2 🔍 Handling Missing Values\nEnsuring data integrity and accuracy is crucial for reliable analysis. We employ the following strategies to handle missing values:\n\n2.1 Identifying Missing Values\n\nWe count missing values in each column and use visualization tools to examine their distribution.\nThis helps determine which fields have high proportions of missing values and their impact on the dataset.\n\n\n\n2.2 Strategies for Handling Missing Values\n\nNumerical Fields (e.g., Salary, Years of Experience): Filled using the median to reduce the impact of extreme values.\nCategorical Fields (e.g., Industry, Job Category): Filled with “Unknown” to prevent information loss.\nColumns with &gt;40% Missing Data: Removed to avoid introducing bias that could affect analytical accuracy.\n\n\n\n2.3 Post-Processing Check\n\nAfter handling missing values, we re-examine the dataset to ensure completeness and evaluate the impact of our methods.\n\n\n\nCode\n# Visualize missing data\nmsno.heatmap(df)\nplt.title(\"Missing Values Heatmap\")\nplt.savefig(\"_output/data_analysis_1_missing_values_heatmap.png\")\nplt.show()\n\n# Drop columns with &gt;40% missing values\ndf.dropna(thresh=len(df) * 0.4, axis=1, inplace=True)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Fill missing values\ndf.loc[:, \"SALARY\"] = df[\"SALARY\"].fillna(df[\"SALARY\"].median())\ndf.loc[:, \"NAICS_2022_6_NAME\"] = df[\"NAICS_2022_6_NAME\"].fillna(\"Unknown\")\ndf.loc[:, \"REMOTE_TYPE_NAME\"] = df[\"REMOTE_TYPE_NAME\"].fillna(\"Unknown\")"
  },
  {
    "objectID": "data_analysis.html#visualizations-and-key-insights",
    "href": "data_analysis.html#visualizations-and-key-insights",
    "title": "Data Analysis",
    "section": "3 📈 Visualizations and Key Insights",
    "text": "3 📈 Visualizations and Key Insights\nExploratory Data Analysis (EDA) is a crucial step in understanding labor market trends and workforce dynamics. By leveraging diverse visualizations, we can uncover industry patterns, salary distributions, and shifts in employment structures. This section aims to provide a clear and concise interpretation of the job market, helping stakeholders make informed decisions based on data-driven insights.\n\n3.1 📊 Industry Job Demand Analysis (Bar Chart)\n\n3.1.1 Reason\nThe bar chart compares different categories of data to visually show the difference in the number of jobs by industry. With this visualization, we can quickly identify which industries have the greatest hiring demand and help job seekers make informed career choices.\n\n\n3.1.2 Analysis\nThe bar chart highlights job demand across industries, revealing that technology (IT services, programming), finance (banking, accounting), and healthcare (medical practitioners, mental health specialists) have the highest job postings. These sectors are expanding due to technological advancements, digital transformation, and increasing healthcare needs.\nConversely, manufacturing, retail, and administrative support show lower demand, likely impacted by automation and shifting consumer trends. Notably, AI-related roles are on the rise, indicating that AI is creating new opportunities rather than replacing jobs, particularly in data science, AI research, and software development.\nTechnology, finance, and healthcare offer strong career prospects, ensuring stability and competitive salaries. Job seekers in declining industries should adapt by learning automation, AI, and data analysis. The bar chart clearly visualizes these industry trends, guiding job seekers toward high-demand fields and future-proof career choices.\n\n\nCode\n# Compute the top 30 industries by job postings\ncounts = df[\"NAICS_2022_6_NAME\"].value_counts()\ntop_30 = counts.head(30)\n\n# Set figure size\nplt.figure(figsize=(12, 10))\n\n# Create a horizontal bar plot with correct `hue` usage\nsns.barplot(x=top_30.values, y=top_30.index, hue=top_30.index, palette=\"viridis\", legend=False)\n\n# Set titles and labels\nplt.title(\"Top 30 Industries\", fontsize=16)\nplt.xlabel(\"Number of Postings\", fontsize=14)\nplt.ylabel(\"Industry\", fontsize=14)\n\n# Show the plot\nplt.savefig(\"_output/data_analysis_2_top_30_industries.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.2 📉 Industry Salary Distribution Analysis (Box Plot)\n\n3.2.1 Reason\nThe box plot clearly shows the median, range, and outliers of salaries to help analyze salary differences between industries. It not only reveals which industries pay the most, but also shows how salaries fluctuate, giving job seekers an idea of the industry’s earning potential and room for growth.\n\n\n3.2.2 Analysis\nThe box plot effectively visualizes salary distribution across industries, highlighting median salaries, variations, and outliers to identify high-paying sectors.\nOur analysis shows that finance and technology (software engineering, data science, AI research) offer the highest salaries, with a wide distribution range, indicating strong earning potential. These fields allow professionals to increase earnings through experience and specialized skills.\nIn contrast, retail, education, and administrative roles have lower salaries with limited variation, suggesting restricted upward mobility. AI-related jobs exhibit high salary fluctuations, reflecting strong demand and competitive compensation for AI talent.\nThe box plot is ideal for analyzing salary trends, as it clearly compares industries, showing which sectors provide the best financial growth opportunities. This information helps job seekers align their career choices with high-paying industries, maximizing their earning potential in the evolving job market.\n\n\nCode\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Get the top 20 industries instead of 30 for better readability\ntop_n = 20\ntop_industries = counts.head(top_n).index\ndf_top = df[df[\"NAICS_2022_6_NAME\"].isin(top_industries)]\n\n# Set Seaborn theme for a cleaner look\nsns.set_theme(style=\"whitegrid\")\n\n# Set a larger figure size\nfig, ax = plt.subplots(figsize=(16, 12))\n\n# Create a horizontal boxplot for better readability\nsns.boxplot(\n    data=df_top,\n    y=\"NAICS_2022_6_NAME\",\n    x=\"SALARY\",\n    hue=\"NAICS_2022_6_NAME\",\n    palette=\"coolwarm\",\n    showfliers=False,\n    width=0.7,\n    legend=False,\n    ax=ax\n)\n\n# Set titles and labels with improved styling\nax.set_title(\"Salary Distribution by Industry (Top 20)\", fontsize=22, fontweight=\"bold\", pad=20)\nax.set_xlabel(\"Salary\", fontsize=18)\nax.set_ylabel(\"Industry\", fontsize=18)\n\n# Increase tick label font size for better readability\nax.tick_params(axis=\"x\", labelsize=14)\nax.tick_params(axis=\"y\", labelsize=14)\n\n# Remove unnecessary spines for a minimalist look\nsns.despine(left=True, bottom=True)\n\n# Adjust layout for better spacing\nplt.tight_layout()\n\n# Show the plot\nplt.savefig(\"_output/data_analysis_3_salary_boxplot_by_industry.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n3.3 ⭕️ Remote vs. On-Site Work Analysis (Pie Chart)\n\n3.3.1 Reason\nPie charts are useful for showing the proportion of different categories and visually comparing the proportion of remote, mixed, and on-site work. It helps job seekers quickly understand remote work trends and identify which industries are more likely to offer remote jobs.\n\n\n3.3.2 Analysis\nThe pie chart illustrates the distribution of Remote, Hybrid Remote, and On-Site jobs, highlighting the growing trend of flexible work arrangements.\n\n78.6% of jobs are fully remote, especially in technology (software development, data science) and marketing, where digital collaboration is seamless.\n\n14.2% of jobs are hybrid remote, reflecting a shift toward partial flexibility.\n\nOnly 7.13% of jobs are entirely on-site, primarily in healthcare, manufacturing, and retail, where physical presence is essential.\n\nThe dominance of remote work suggests companies are increasingly offering flexible arrangements to attract talent. Hybrid models indicate a transition phase, balancing in-office and remote collaboration. On-site jobs remain crucial for industries requiring face-to-face interactions.\nA pie chart effectively visualizes these proportions, making it clear that remote work has become the new norm, influencing job seekers to prioritize digital skills and adaptability in an evolving job market.\n\n\nCode\n# Filter out \"[None]\" values\ndf_filtered = df[df[\"REMOTE_TYPE_NAME\"] != \"[None]\"]\n\n# Count the number of each remote job type\nremote_counts = df_filtered[\"REMOTE_TYPE_NAME\"].value_counts()\n\n# Set figure size\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Define custom colors\ncolors = [\"#f77f00\", \"#f8961e\", \"#f9c74f\"]\n\n# Create Pie Chart (Fixed Syntax)\nwedges, texts, autotexts = ax.pie(\n    remote_counts,\n    labels=remote_counts.index,\n    autopct=\"%1.1f%%\",\n    startangle=140,\n    colors=colors,\n    textprops={\"fontsize\": 14},\n    wedgeprops={\"edgecolor\": \"black\"}\n)\n\n# Set Title\nax.set_title(\"Remote vs. On-Site Jobs\", fontsize=18, fontweight=\"bold\", pad=20)\n\n# Improve layout\nplt.tight_layout()\n\n# Show the plot\nplt.savefig(\"_output/data_analysis_4_remote_vs_onsite_piechart.png\")\nplt.show()"
  },
  {
    "objectID": "skill_gap_analysis.html",
    "href": "skill_gap_analysis.html",
    "title": "Skill Gap Analysis",
    "section": "",
    "text": "This section compares the self-assessed technical skills of team members with the key competencies demanded in IT job postings, particularly within data and machine learning roles. The goal is to identify knowledge gaps and design personalized learning plans to enhance project readiness and team-wide growth.\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\n\nskills_data = {\n    \"Name\": [\"Jianhao Hong\", \"Xinran Li\", \"Chialing Sung\", \"Zimo Zeng\"],\n    \"Python\": [4, 2, 3, 2],\n    \"SQL\": [5, 4, 2, 3],\n    \"Machine Learning\": [2, 2, 3, 1],\n    \"Cloud Computing\": [2, 3, 2, 4]\n}\n\ndf_skills = pd.DataFrame(skills_data)\ndf_skills.set_index(\"Name\", inplace=True)\ndf_skills\n\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\n\n\nName\n\n\n\n\n\n\n\n\nJianhao Hong\n4\n5\n2\n2\n\n\nXinran Li\n2\n4\n2\n3\n\n\nChialing Sung\n3\n2\n3\n2\n\n\nZimo Zeng\n2\n3\n1\n4\n\n\n\n\n\n\n\n\n\nCode\nimport plotly.express as px\n\nfig = px.imshow(\n    df_skills,\n    text_auto=True,\n    color_continuous_scale=\"RdBu\",\n    aspect=\"auto\",\n    labels=dict(x=\"Skill\", y=\"Team Member\"),\n    title=\"Team Skill Levels Heatmap\",\n    template=\"plotly_white\"\n)\nfig.write_image(\"_output/skill_1_levels_heatmap.png\")\nfig.show()\n\n\n        \n        \n        \n\n\n                            \n                                            \n\n\n\n\nCode\ntop_skills = [\"Python\", \"SQL\", \"Machine Learning\", \"Cloud Computing\", \"Docker\", \"AWS\"]\n\nfor skill in top_skills:\n    if skill not in df_skills.columns:\n        df_skills[skill] = 0\n\nfig = px.imshow(\n    df_skills[top_skills],\n    text_auto=True,\n    color_continuous_scale=\"RdBu\",\n    aspect=\"auto\",\n    labels=dict(x=\"Skill\", y=\"Team Member\"),\n    title=\"Team Skill Levels vs Industry Demands\",\n    template=\"plotly_white\"\n)\nfig.write_image(\"_output/skill_2_team_level_vs_industry_demands.png\")\nfig.show()"
  },
  {
    "objectID": "skill_gap_analysis.html#objective",
    "href": "skill_gap_analysis.html#objective",
    "title": "Skill Gap Analysis",
    "section": "",
    "text": "This section compares the self-assessed technical skills of team members with the key competencies demanded in IT job postings, particularly within data and machine learning roles. The goal is to identify knowledge gaps and design personalized learning plans to enhance project readiness and team-wide growth.\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\n\nskills_data = {\n    \"Name\": [\"Jianhao Hong\", \"Xinran Li\", \"Chialing Sung\", \"Zimo Zeng\"],\n    \"Python\": [4, 2, 3, 2],\n    \"SQL\": [5, 4, 2, 3],\n    \"Machine Learning\": [2, 2, 3, 1],\n    \"Cloud Computing\": [2, 3, 2, 4]\n}\n\ndf_skills = pd.DataFrame(skills_data)\ndf_skills.set_index(\"Name\", inplace=True)\ndf_skills\n\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\n\n\nName\n\n\n\n\n\n\n\n\nJianhao Hong\n4\n5\n2\n2\n\n\nXinran Li\n2\n4\n2\n3\n\n\nChialing Sung\n3\n2\n3\n2\n\n\nZimo Zeng\n2\n3\n1\n4\n\n\n\n\n\n\n\n\n\nCode\nimport plotly.express as px\n\nfig = px.imshow(\n    df_skills,\n    text_auto=True,\n    color_continuous_scale=\"RdBu\",\n    aspect=\"auto\",\n    labels=dict(x=\"Skill\", y=\"Team Member\"),\n    title=\"Team Skill Levels Heatmap\",\n    template=\"plotly_white\"\n)\nfig.write_image(\"_output/skill_1_levels_heatmap.png\")\nfig.show()\n\n\n        \n        \n        \n\n\n                            \n                                            \n\n\n\n\nCode\ntop_skills = [\"Python\", \"SQL\", \"Machine Learning\", \"Cloud Computing\", \"Docker\", \"AWS\"]\n\nfor skill in top_skills:\n    if skill not in df_skills.columns:\n        df_skills[skill] = 0\n\nfig = px.imshow(\n    df_skills[top_skills],\n    text_auto=True,\n    color_continuous_scale=\"RdBu\",\n    aspect=\"auto\",\n    labels=dict(x=\"Skill\", y=\"Team Member\"),\n    title=\"Team Skill Levels vs Industry Demands\",\n    template=\"plotly_white\"\n)\nfig.write_image(\"_output/skill_2_team_level_vs_industry_demands.png\")\nfig.show()"
  },
  {
    "objectID": "skill_gap_analysis.html#improvement-plan-addressing-the-skill-gap",
    "href": "skill_gap_analysis.html#improvement-plan-addressing-the-skill-gap",
    "title": "Skill Gap Analysis",
    "section": "2 Improvement Plan: Addressing the Skill Gap",
    "text": "2 Improvement Plan: Addressing the Skill Gap\n\n2.1 Skill Gap Summary\nFrom the heatmap comparison between team skills and industry-demanded skills (e.g., Python, SQL, Machine Learning, Cloud Computing, Docker, AWS), the following insights emerge:\n\nAll team members lack Docker and AWS skills, which are widely required in modern DevOps and cloud roles.\nJianhao Hong demonstrates strong SQL and Python skills, but could improve Cloud Computing and gain introductory experience in Docker and AWS.\nXinran Li shows good balance, especially in Cloud Computing, but should focus on deeper Machine Learning knowledge and Docker basics.\nChialing Sung has solid Machine Learning capability and moderate Python, but needs exposure to cloud platforms and DevOps tools.\nZimo Zeng excels in Cloud Computing but has a significant gap in Machine Learning and scripting languages like Python.\n\n\n\n2.2 Recommended Resources\n\n\n\nSkill\nSuggested Resource\n\n\n\n\nDocker\nDocker 101 Training\n\n\nAWS\nAWS Skill Builder\n\n\nPython\nCodecademy – Learn Python 3\n\n\nMachine Learning\nCoursera – Stanford ML\n\n\nCloud Computing\nGoogle Cloud Skills Boost\n\n\n\n\n\n2.3 Team Development Suggestions\n\nEstablish peer-led workshops where stronger members (e.g., Jianhao in SQL) teach others.\nAssign self-learning goals based on individual gaps (e.g., Docker for all).\nTrack weekly progress and share reflections in a team Slack channel or Notion board."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Job Market Analysis",
    "section": "",
    "text": "Exploring Gender, Wages, and the Workforce Divide"
  },
  {
    "objectID": "index.html#project-overview",
    "href": "index.html#project-overview",
    "title": "Job Market Analysis",
    "section": "📌 Project Overview",
    "text": "📌 Project Overview\nThis project investigates gender disparities in the U.S. labor market with a focus on wage inequality, occupational segregation, and the influence of political environments on gendered employment patterns.\nUsing real-world job posting and employment data, we explore:\n\nPersistent gender pay gaps despite similar education or experience\n\nOverrepresentation of women in specific industries (e.g., education, healthcare)\n\nEffects of state-level labor policies on gender equality\n\nWe apply machine learning and natural language processing to extract insights and support evidence-based policy recommendations."
  },
  {
    "objectID": "index.html#key-sections",
    "href": "index.html#key-sections",
    "title": "Job Market Analysis",
    "section": "🔍 Key Sections",
    "text": "🔍 Key Sections\n\n🏁 Introduction: Background, motivation, and research focus\n\n🧹 Data Cleaning & Exploration: Preprocessing and dataset structure\n\n📈 Exploratory Data Analysis: Initial visualizations and variable distributions\n\n💼 Skill Gap Analysis: Demand vs. supply of skills by gender and industry\n\n🤖 ML Methods: Classification, clustering, and regression approaches\n\n📚 NLP Methods: Topic modeling and resume–job matching\n\n📎 References: Full bibliography of supporting literature"
  },
  {
    "objectID": "index.html#research-motivation",
    "href": "index.html#research-motivation",
    "title": "Job Market Analysis",
    "section": "📖 Research Motivation",
    "text": "📖 Research Motivation\n\n“Equality means more than passing laws. The struggle is really won in the hearts and minds of the community.”\n— Barbara Gittings\n\nWe believe data can tell powerful stories and drive actionable change. This project seeks to transform labor statistics into insights that help bridge the gender divide in the workforce."
  },
  {
    "objectID": "index.html#team-members",
    "href": "index.html#team-members",
    "title": "Job Market Analysis",
    "section": "💻 Team Members",
    "text": "💻 Team Members\nTeam 8 | AD688 | Boston University\nSpring 2025"
  },
  {
    "objectID": "index.html#start-exploring",
    "href": "index.html#start-exploring",
    "title": "Job Market Analysis",
    "section": "🔗 Start Exploring",
    "text": "🔗 Start Exploring\nClick on any section above, or head directly to the 📖 Introduction to begin reading."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Exploratory Data Analysis & Visualization",
    "section": "",
    "text": "This section presents enhanced exploratory data analysis (EDA) to uncover meaningful insights from job posting data. By combining statistical summaries with polished visualizations, we aim to clarify trends in labor market demand, salary distribution, and remote work preferences. These insights are critical for understanding industry dynamics, guiding policy, and informing personal career decisions.\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\nimport plotly.io as pio\n\n\n\n\nCode\npio.templates[\"custom\"] = pio.templates[\"plotly_white\"].update({\n    \"layout\": {\n        \"font\": {\"family\": \"Arial\", \"size\": 14, \"color\": \"#333\"},\n        \"title\": {\"x\": 0.05, \"font\": {\"size\": 22, \"color\": \"#1f77b4\"}},\n        \"paper_bgcolor\": \"white\",\n        \"plot_bgcolor\": \"white\",\n    }\n})\npio.templates.default = \"custom\"\n\n\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\nimport plotly.io as pio\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\n# Load data\ndf = pd.read_csv(\"/home/ubuntu/ad688-employability-sp25A1-group8-1/job_postings.csv\")\ndf.columns = df.columns.str.upper()"
  },
  {
    "objectID": "eda.html#objective",
    "href": "eda.html#objective",
    "title": "Exploratory Data Analysis & Visualization",
    "section": "",
    "text": "This section presents enhanced exploratory data analysis (EDA) to uncover meaningful insights from job posting data. By combining statistical summaries with polished visualizations, we aim to clarify trends in labor market demand, salary distribution, and remote work preferences. These insights are critical for understanding industry dynamics, guiding policy, and informing personal career decisions.\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\nimport plotly.io as pio\n\n\n\n\nCode\npio.templates[\"custom\"] = pio.templates[\"plotly_white\"].update({\n    \"layout\": {\n        \"font\": {\"family\": \"Arial\", \"size\": 14, \"color\": \"#333\"},\n        \"title\": {\"x\": 0.05, \"font\": {\"size\": 22, \"color\": \"#1f77b4\"}},\n        \"paper_bgcolor\": \"white\",\n        \"plot_bgcolor\": \"white\",\n    }\n})\npio.templates.default = \"custom\"\n\n\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\nimport plotly.io as pio\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\n# Load data\ndf = pd.read_csv(\"/home/ubuntu/ad688-employability-sp25A1-group8-1/job_postings.csv\")\ndf.columns = df.columns.str.upper()"
  },
  {
    "objectID": "eda.html#top-30-industries-by-job-postings",
    "href": "eda.html#top-30-industries-by-job-postings",
    "title": "Exploratory Data Analysis & Visualization",
    "section": "📊 Top 30 Industries by Job Postings",
    "text": "📊 Top 30 Industries by Job Postings\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\nimport plotly.io as pio\n\n# Set global Plotly theme\npio.templates.default = \"plotly_white\"\n\n# Load and clean data\ndf = pd.read_csv(\"/home/ubuntu/ad688-employability-sp25A1-group8-1/job_postings.csv\")\ndf.columns = df.columns.str.upper()\n\n# Prepare data\nindustry_df = df[\"NAICS_2022_6_NAME\"].value_counts().nlargest(30).sort_values(ascending=True)\nindustry_df = industry_df.to_frame(name=\"Postings\").reset_index()\nindustry_df.columns = [\"Industry\", \"Postings\"]\n\n# Create bar chart with pastel tones\nfig = px.bar(\n    industry_df,\n    x=\"Postings\",\n    y=\"Industry\",\n    orientation=\"h\",\n    title=\"Top 30 Industries by Job Postings\",\n    color=\"Postings\",\n    color_continuous_scale=\"Mint\", \n    height=900,\n    width=1000,\n    text=\"Postings\"\n)\n\n# Layout enhancements\nfig.update_layout(\n    title_font=dict(size=22, family=\"Arial\", color=\"#1f77b4\"),\n    font=dict(family=\"Arial\", size=13, color=\"#333\"),\n    xaxis_title=\"Number of Postings\",\n    yaxis_title=\"\",\n    xaxis_tickformat=\",\",\n    margin=dict(l=250, r=50, t=80, b=50),\n    coloraxis_showscale=False\n)\n\n# Show text labels on bars\nfig.update_traces(\n    textposition=\"outside\",\n    cliponaxis=False\n)\n\n# Save files\nfig.write_image(\"_output/eda_1_top_industries.png\")\ntry:\n    fig.write_image(\"output/job_postings_by_industry.png\")\nexcept Exception as e:\n    print(\"PNG export failed:\", e)\n\nfig.show()\n\n\nPNG export failed: [Errno 2] No such file or directory: 'output/job_postings_by_industry.png'\n\n\n        \n        \n        \n\n\n                            \n                                            \n\n\n\n✅ Reason\nThe bar chart visually compares job posting volumes across industries, helping stakeholders quickly identify high-demand sectors. It uses descending order, clean labeling, and a consistent color theme to ensure clarity and interpretability.\n\n\n🔍 Analysis\n🔹 Clarifies Labor Market Demand\n- Identifies High-Demand Sectors: The top industries include Custom Computer Programming Services, Administrative Management, and Employment Placement Agencies, indicating strong demand in tech and business consulting.\n- Highlights Data Classification Gaps: The high count of “Unclassified Industry” postings may reflect inconsistent data labeling or gaps in employer input.\n- Reveals Structural Shifts: Industries such as retail, telecom, and administration appear lower on the list, suggesting a trend of automation and shifting consumer behavior.\n🔹 Enables Career Planning\n- Supports Strategic Reskilling: Students and job seekers can realign learning goals with industries that show the most activity.\n- Guides Workforce Programs: Educational institutions and policy makers can tailor upskilling programs for booming sectors like tech, finance, and healthcare.\n🔹 Improves Visualization Communication\n- Clear Comparison: The horizontal bar chart presents a side-by-side ranking that’s easy to digest.\n- Stakeholder-Friendly: A useful resource for employers, schools, and analysts to drive strategy and decision-making based on real-time industry demand."
  },
  {
    "objectID": "eda.html#salary-distribution-by-industry-top-20",
    "href": "eda.html#salary-distribution-by-industry-top-20",
    "title": "Exploratory Data Analysis & Visualization",
    "section": "💰 Salary Distribution by Industry (Top 20)",
    "text": "💰 Salary Distribution by Industry (Top 20)\n\n\nCode\nimport pandas as pd\nimport plotly.express as px\nimport plotly.io as pio\n\n# Set custom Plotly theme\npio.templates[\"custom\"] = pio.templates[\"plotly_white\"].update({\n    \"layout\": {\n        \"font\": {\"family\": \"Arial\", \"size\": 14, \"color\": \"#333\"},\n        \"title\": {\"x\": 0.05, \"font\": {\"size\": 22, \"color\": \"#1f77b4\"}},\n        \"paper_bgcolor\": \"white\",\n        \"plot_bgcolor\": \"white\",\n    }\n})\npio.templates.default = \"custom\"\n\n# Ensure salary column exists\ndf[\"SALARY\"] = pd.to_numeric(df.get(\"POSTED_SALARY\", df.get(\"SALARY\", None)), errors=\"coerce\")\n\n# Filter top 20 industries with valid salary data\ntop_20_industries = df[\"NAICS_2022_6_NAME\"].value_counts().head(20).index\ndf_salary = df[df[\"NAICS_2022_6_NAME\"].isin(top_20_industries) & df[\"SALARY\"].notnull()]\n\n# Calculate median salary and sort\nmedian_salary = (\n    df_salary.groupby(\"NAICS_2022_6_NAME\")[\"SALARY\"]\n    .median()\n    .sort_values()\n    .reset_index()\n    .rename(columns={\"SALARY\": \"Median\"})\n)\n\n# Merge and set category order\ndf_salary = df_salary.merge(median_salary, on=\"NAICS_2022_6_NAME\")\ndf_salary[\"NAICS_2022_6_NAME\"] = pd.Categorical(\n    df_salary[\"NAICS_2022_6_NAME\"],\n    categories=median_salary[\"NAICS_2022_6_NAME\"],\n    ordered=True\n)\n\n# Define RdYlBu-like diverging color sequence (20 colors)\nrdyblu_palette = px.colors.diverging.RdYlBu[:20]\n\n# Create Plotly boxplot\nfig = px.box(\n    df_salary,\n    x=\"SALARY\",\n    y=\"NAICS_2022_6_NAME\",\n    color=\"NAICS_2022_6_NAME\",\n    color_discrete_sequence=rdyblu_palette,\n    points=False,\n    title=\"Salary Distribution by Industry (Top 20)\",\n    height=900,\n    width=1100\n)\n\n# Layout customization\nfig.update_layout(\n    showlegend=False,\n    xaxis_title=\"Salary (USD)\",\n    yaxis_title=\"Industry\",\n    margin=dict(l=250, r=50, t=80, b=50)\n)\n\n# Format x-axis\nfig.update_xaxes(tickformat=\"$,~s\")\n\n# Save\nfig.write_image(\"_output/eda_2_salary_distribution_by_industry_plotly.png\")\nfig.show()\n\n\n                            \n                                            \n\n\n\n✅ Reason\nThis horizontal boxplot provides a comprehensive view of salary ranges across the top 20 industries. The consistent pastel color palette and sorted layout enhance readability while enabling comparison of central tendencies and variation in compensation.\n\n\n🔍 Analysis\n🔹 Highlights Compensation Gaps\n- Identifies High-Paying Fields: Sectors like Web Search Portals, Administrative Management, and Certified Public Accountants demonstrate significantly higher median salaries.\n- Visualizes Salary Spread: The boxplot format allows users to assess industry-level variation, skewness, and the presence of salary outliers.\n🔹 Supports Career and Salary Planning\n- Informs Job Seekers: Individuals can set more realistic salary expectations and prioritize sectors with better earning potential.\n- Encourages Upskilling: Fields with broad salary distributions often reward advanced skills, certifications, or specialization.\n🔹 Improves Employer Benchmarking\n- Supports Compensation Strategy: Businesses can evaluate whether their offered salaries are competitive within their industry.\n- Guides Policy Analysis: Policymakers and analysts can use this to assess pay equity across different domains and job categories."
  },
  {
    "objectID": "eda.html#remote-work-types-excluding-unspecified",
    "href": "eda.html#remote-work-types-excluding-unspecified",
    "title": "Exploratory Data Analysis & Visualization",
    "section": "🌍 Remote Work Types (Excluding Unspecified)",
    "text": "🌍 Remote Work Types (Excluding Unspecified)\n\n\nCode\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport pandas as pd\n\n# Clean and prepare data\ndf_filtered = df[df[\"REMOTE_TYPE_NAME\"].notna()]\ndf_filtered = df_filtered[df_filtered[\"REMOTE_TYPE_NAME\"] != \"[None]\"]\nremote_counts = df_filtered[\"REMOTE_TYPE_NAME\"].value_counts().reset_index()\nremote_counts.columns = [\"Remote Type\", \"Count\"]\n\n# Calculate percentage\nremote_counts[\"Percent\"] = remote_counts[\"Count\"] / remote_counts[\"Count\"].sum() * 100\nremote_counts[\"Label\"] = remote_counts.apply(\n    lambda row: f\"{row['Remote Type']}&lt;br&gt;{row['Percent']:.1f}% ({row['Count']})\", axis=1\n)\n\n# Plotly Donut Pie Chart\nfig = go.Figure(\n    data=[go.Pie(\n        labels=remote_counts[\"Remote Type\"],\n        values=remote_counts[\"Count\"],\n        hole=0.55,\n        marker=dict(colors=[\"#F77F00\", \"#F9A03F\", \"#FFE29A\"], line=dict(color=\"white\", width=2)),\n        text=remote_counts[\"Label\"],\n        hoverinfo=\"text\",\n        textinfo=\"label+percent\",\n        textposition=\"outside\"\n    )]\n)\n\n# Layout\nfig.update_layout(\n    title=\"🏠 Remote Work Types (Excluding Unspecified)\",\n    title_font_size=20,\n    font=dict(family=\"Arial\", size=14, color=\"#333\"),\n    margin=dict(l=50, r=50, t=80, b=50),\n    showlegend=False\n)\n\n# Save\nfig.write_image(\"_output/eda_3_remote_work_types_pie_plotly.png\")\n\n# Show\nfig.show()\n\n\n                            \n                                            \n\n\n\n✅ Reason\nA donut-style pie chart provides a compact and intuitive view of remote work distribution. It effectively communicates the proportion of fully remote, hybrid, and on-site jobs using color distinction and labeled percentages, making it highly accessible for both technical and non-technical audiences.\n\n\n🔍 Analysis\n🔹 Reflects Modern Work Preferences\n- Tracks Remote Work Trends: Shows the shift toward flexible work environments in the job market.\n- Supports Talent Strategy: Employers can adjust remote policies based on what’s prevalent in the broader market.\n🔹 Helps Job Matching\n- Informs Job Seekers: Helps individuals choose jobs based on lifestyle and location flexibility.\n- Supports Equity & Accessibility: Remote jobs enable access for rural or underserved populations, reducing geographic barriers.\n🔹 Improves Visual Simplicity\n- Compact Presentation: Donut chart gives a clear breakdown in one glance.\n- Enhances Dashboard Readability: Ideal for HR and workforce dashboards to display high-level trends for decision-making."
  }
]